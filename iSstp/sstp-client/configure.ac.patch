--- configure.ac.orig	2021-09-09 21:46:59.000000000 +0900
+++ configure.ac	2021-09-09 21:48:03.000000000 +0900
@@ -1,5 +1,5 @@
 AC_PREREQ([2.65])
-AC_INIT([sstp-client], 
+AC_INIT([sstp-client],
         [1.0.15],
         [https://gitlab.com/eivnaes/sstp-client])
 
@@ -25,7 +25,7 @@
     [with_libevent="$withval"], [with_libevent="2"])
 
 AS_CASE([$with_libevent],
-    ["1"],[AX_CHECK_LIBRARY([LIBEVENT], [event.h], [event], 
+    ["1"],[AX_CHECK_LIBRARY([LIBEVENT], [event.h], [event],
             [AC_CHECK_LIB([event], [event_init], [],
                 [AC_MSG_ERROR([libevent is not usable])])],
             [AC_MSG_ERROR([Required library libevent not found])])],
@@ -34,16 +34,24 @@
             [AC_MSG_ERROR([Required library libevent not found])])],
     ["*"],[AC_MSG_ERROR([Unknown version of libevent specified])])
 
-CFLAGS="$LIBEVENT_CFLAGS $CFLAGS"
-LDFLAGS="$LIBEVENT_LIBS $LDFLAGS"
+PKG_CHECK_MODULES([LIBEVENT], [libevent >= $LIBEVENT2_MINIMUM],
+            [AC_DEFINE([HAVE_LIBEVENT2], [1], [Specify use of libevent >= $LIBEVENT2_MINIMUM])],
+            [AC_MSG_ERROR([Required library libevent not found])])
+
+CFLAGS="$LIBEVENT_CFLAGS $LIBEVENT_INCLUDES $CFLAGS"
 
 # Check for OpenSSL
-AX_CHECK_OPENSSL([], 
+AX_CHECK_OPENSSL([],
     [AC_MSG_ERROR([OpenSSL not found Hint: apt-get install libssl-dev])])
-LIBS="$LIBS $OPENSSL_LIBS"
+
 CFLAGS="$OPENSSL_INCLUDES $CFLAGS"
-LDFLAGS="$OPENSSL_LDFLAGS $LDFLAGS"
 
+LDFLAGS=""
+LIBEVENT_STATIC_LIBS="$LIBEVENT_STATIC_LIBS"
+OPENSSL_STATIC_LIBS="$OPENSSL_STATIC_LIBS"
+
+AC_SUBST([LIBEVENT_STATIC_LIBS])
+AC_SUBST([OPENSSL_STATIC_LIBS])
 
 # Check for openpty
 AC_CHECK_LIB([util], [openpty])
@@ -70,7 +78,7 @@
 
 
 # Specify runtime directory
-AC_ARG_WITH([runtime-dir], 
+AC_ARG_WITH([runtime-dir],
 	AC_HELP_STRING([--with-runtime-dir=DIR], [Specify the runtime directory for sstpc]))
 AS_IF([ test -n "$with_runtime_dir"],
 	[SSTP_RUNTIME_DIR="$with_runtime_dir"],
@@ -79,7 +87,7 @@
 
 
 # Check to see if we enabled PPP plug-in support (default:yes)
-AC_ARG_ENABLE(ppp-plugin, 
+AC_ARG_ENABLE(ppp-plugin,
     AC_HELP_STRING([--disable-ppp-plugin=DIR], [disable PPP Plugin support]),
     [enable_ppp_plugin=${enableval}], [enable_ppp_plugin=yes])
 AS_IF([test "x$enable_ppp_plugin" != "xno"],
@@ -111,12 +119,12 @@
     AS_HELP_STRING([--with-pppd-auth-notify-support], [is the auth-notifier supported in this pppd version]))
 AS_IF([test "x$with_pppd_auth_notify_support" == "xyes" ],
     [AC_DEFINE(USE_PPPD_AUTH_HOOK,1,[Define if pppd has support for client side authentication complete notification])
-     PPPD_AUTH_NOTIFIER="yes"], 
+     PPPD_AUTH_NOTIFIER="yes"],
     [PPPD_AUTH_NOTIFIER="no"])
 
 # Check to see if the plugin directory was set
 AM_CONDITIONAL(WITH_PPP_PLUGIN, test "${enable_ppp_plugin}" = "yes")
-AC_ARG_WITH([pppd-plugin-dir], 
+AC_ARG_WITH([pppd-plugin-dir],
     AS_HELP_STRING([--with-pppd-plugin-dir=DIR], [path to the pppd plugins directory]))
 if test -n "$with_pppd_plugin_dir" ; then
     PPPD_PLUGIN_DIR="$with_pppd_plugin_dir"
@@ -128,7 +136,7 @@
 # system CA certificates path
 AC_ARG_WITH(system-ca-path,
             AS_HELP_STRING([--with-system-ca-path=/path/to/ssl/certs], [path to system CA certificates]))
-if test "x${with_system_ca_path}" = x; then 
+if test "x${with_system_ca_path}" = x; then
     SYSTEM_CA_PATH="${sysconfdir}/ssl/certs"
 else
     SYSTEM_CA_PATH="$with_system_ca_path"
@@ -206,9 +214,9 @@
     System CA Path..: $SYSTEM_CA_PATH
     User:...........: $enable_user
     Group:..........: $enable_group
-    Using OpenSSL...: $OPENSSL_INCLUDES $OPENSSL_LDFLAGS $OPENSSL_LIBS
+    Using OpenSSL...: $OPENSSL_INCLUDES $OPENSSL_LDFLAGS $OPENSSL_LIBS $OPENSSL_STATIC_LIBS
     C Compiler......: $CC $CFLAGS
-    Using Event.....: $LIBEVENT_CFLAGS $LIBEVENT_LIBS
+    Using Event.....: $LIBEVENT_CFLAGS $LIBEVENT_LIBS $LIBEVENT_STATIC_LIBS
     Linker..........: $LD $LDFLAGS $LIBS
 "
 if [ test "x${enable_ppp_plugin}" = "xyes" ] ; then
@@ -220,4 +228,3 @@
     Plugin Cflags...: $PPPD_PLUGIN_CFLAGS
 "
 fi
-
